library(nlstools)
library(investr)
library(ggplot2)
library(caret)
#Generate Data
Growth <- data.frame(Time_years=seq(1,35,by=0.1))
# set.seed(123) #Can set the seed to generate same dataset everytime
Growth$Interval <- runif(n=length(Growth$Time_years), min = -5, max = 5)
Growth$Measure <- (38.13+(0.9200-38.13)*(exp(-0.3707*(Growth$Time_years))))+Growth$Interval
Growth <- Growth[,c(1,3)]
ggplot(data=Growth,aes(Time_years,Measure))+geom_point()

Growth_vb <- nls(Measure ~ linf+(L1-linf)*(exp(-k*(Time_years))), 
                 data=Growth, start=list(L1=1,linf=40,k=0.3), trace=TRUE)
coef(Growth_vb)
Growth_pred <- cbind(Growth, Growth_vb$m$fitted(),Growth_vb$m$resid())
colnames(Growth_pred) <- c('Time_years','Measure','Exp', 'resid')
Growth_pred$sq_resid <- Growth_pred$resid^2
Growth_pred$int_time <- as.integer(Growth_pred$Time_years)
mean_meas <- mean(Growth_pred$Measure)
n <- length(Growth_pred$sq_resid)
RSS <- sum(Growth_pred$sq_resid)
CI <- sqrt(RSS/n)*1.96
Growth_pred$LCL <- Growth_pred$Exp-CI
Growth_pred$UCL <- Growth_pred$Exp+CI

#function for the cross-validation
predict_growth <- function(vb) {
  predict(Growth_vb, newdata = data.frame(Exp_Measure = vb))
}
train_type <- trainControl(method = 'LOOCV')
train_model <- train(Measure ~ predict_growth(Time_years), data=Growth,
                     method = 'lm', trControl = train_type)
Measure_Error <- abs(train_model$pred$obs-train_model$pred$pred)/train_model$pred$obs
#final product of the leave-one-out cross validation that presents the accuracy of the model
Mean_Proportion_Error <- mean(Measure_Error)

ggplot(data=Growth_pred)+
  geom_point(aes(x=Time_years, y=Measure), shape=21)+
  geom_line(aes(x=Time_years, y=Exp), color='blue', linewidth=2)+
  geom_line(aes(x=Time_years, y=LCL), color='blue', linewidth=2, linetype=2)+
  geom_line(aes(x=Time_years, y=UCL), color='blue', linewidth=2, linetype=2)+
  labs(x="Time (years)", y="Measure")+
  theme_bw()

# Coefficient of Variation measures by integer time unit
CVs_summary <- aggregate(sq_resid ~ int_time, data=Growth_pred, FUN = sum)
CVs_summary <- cbind(CVs_summary,aggregate(sq_resid ~ int_time, data=Growth_pred, FUN = length)[,2])
CVs_summary <- cbind(CVs_summary,aggregate(Measure ~ int_time, data=Growth_pred, FUN = mean)[,2])
colnames(CVs_summary) <- c('int_time' ,'sum_sq', 'n', 'mean_meas')
CVs_summary$CV <- sqrt(CVs_summary$sum_sq/CVs_summary$n)/CVs_summary$mean_meas

